//! https://github.com/abulmo/edax-reversi/blob/14f048c05ddfa385b6bf954a9c2905bbe677e9d3/src/count_last_flip_bmi2.c
use crate::bit::pext_u64;
use crate::square::Square;

#[rustfmt::skip]
const COUNT_FLIP: [[u8; 256]; 8] = [
	[
		 0,  0,  0,  0,  2,  2,  0,  0,  4,  4,  0,  0,  2,  2,  0,  0,  6,  6,  0,  0,  2,  2,  0,  0,  4,  4,  0,  0,  2,  2,  0,  0,
		 8,  8,  0,  0,  2,  2,  0,  0,  4,  4,  0,  0,  2,  2,  0,  0,  6,  6,  0,  0,  2,  2,  0,  0,  4,  4,  0,  0,  2,  2,  0,  0,
		10, 10,  0,  0,  2,  2,  0,  0,  4,  4,  0,  0,  2,  2,  0,  0,  6,  6,  0,  0,  2,  2,  0,  0,  4,  4,  0,  0,  2,  2,  0,  0,
		 8,  8,  0,  0,  2,  2,  0,  0,  4,  4,  0,  0,  2,  2,  0,  0,  6,  6,  0,  0,  2,  2,  0,  0,  4,  4,  0,  0,  2,  2,  0,  0,
		12, 12,  0,  0,  2,  2,  0,  0,  4,  4,  0,  0,  2,  2,  0,  0,  6,  6,  0,  0,  2,  2,  0,  0,  4,  4,  0,  0,  2,  2,  0,  0,
		 8,  8,  0,  0,  2,  2,  0,  0,  4,  4,  0,  0,  2,  2,  0,  0,  6,  6,  0,  0,  2,  2,  0,  0,  4,  4,  0,  0,  2,  2,  0,  0,
		10, 10,  0,  0,  2,  2,  0,  0,  4,  4,  0,  0,  2,  2,  0,  0,  6,  6,  0,  0,  2,  2,  0,  0,  4,  4,  0,  0,  2,  2,  0,  0,
		 8,  8,  0,  0,  2,  2,  0,  0,  4,  4,  0,  0,  2,  2,  0,  0,  6,  6,  0,  0,  2,  2,  0,  0,  4,  4,  0,  0,  2,  2,  0,  0,
	],
	[
		 0,  0,  0,  0,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,  4,  4,  4,  4,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,
		 6,  6,  6,  6,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,  4,  4,  4,  4,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,
		 8,  8,  8,  8,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,  4,  4,  4,  4,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,
		 6,  6,  6,  6,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,  4,  4,  4,  4,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,
		10, 10, 10, 10,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,  4,  4,  4,  4,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,
		 6,  6,  6,  6,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,  4,  4,  4,  4,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,
		 8,  8,  8,  8,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,  4,  4,  4,  4,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,
		 6,  6,  6,  6,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,  4,  4,  4,  4,  0,  0,  0,  0,  2,  2,  2,  2,  0,  0,  0,  0,
	],
	[
		 0,  2,  0,  0,  0,  2,  0,  0,  0,  2,  0,  0,  0,  2,  0,  0,  2,  4,  2,  2,  2,  4,  2,  2,  0,  2,  0,  0,  0,  2,  0,  0,
		 4,  6,  4,  4,  4,  6,  4,  4,  0,  2,  0,  0,  0,  2,  0,  0,  2,  4,  2,  2,  2,  4,  2,  2,  0,  2,  0,  0,  0,  2,  0,  0,
		 6,  8,  6,  6,  6,  8,  6,  6,  0,  2,  0,  0,  0,  2,  0,  0,  2,  4,  2,  2,  2,  4,  2,  2,  0,  2,  0,  0,  0,  2,  0,  0,
		 4,  6,  4,  4,  4,  6,  4,  4,  0,  2,  0,  0,  0,  2,  0,  0,  2,  4,  2,  2,  2,  4,  2,  2,  0,  2,  0,  0,  0,  2,  0,  0,
		 8, 10,  8,  8,  8, 10,  8,  8,  0,  2,  0,  0,  0,  2,  0,  0,  2,  4,  2,  2,  2,  4,  2,  2,  0,  2,  0,  0,  0,  2,  0,  0,
		 4,  6,  4,  4,  4,  6,  4,  4,  0,  2,  0,  0,  0,  2,  0,  0,  2,  4,  2,  2,  2,  4,  2,  2,  0,  2,  0,  0,  0,  2,  0,  0,
		 6,  8,  6,  6,  6,  8,  6,  6,  0,  2,  0,  0,  0,  2,  0,  0,  2,  4,  2,  2,  2,  4,  2,  2,  0,  2,  0,  0,  0,  2,  0,  0,
		 4,  6,  4,  4,  4,  6,  4,  4,  0,  2,  0,  0,  0,  2,  0,  0,  2,  4,  2,  2,  2,  4,  2,  2,  0,  2,  0,  0,  0,  2,  0,  0,
	],
	[
		 0,  4,  2,  2,  0,  0,  0,  0,  0,  4,  2,  2,  0,  0,  0,  0,  0,  4,  2,  2,  0,  0,  0,  0,  0,  4,  2,  2,  0,  0,  0,  0,
		 2,  6,  4,  4,  2,  2,  2,  2,  2,  6,  4,  4,  2,  2,  2,  2,  0,  4,  2,  2,  0,  0,  0,  0,  0,  4,  2,  2,  0,  0,  0,  0,
		 4,  8,  6,  6,  4,  4,  4,  4,  4,  8,  6,  6,  4,  4,  4,  4,  0,  4,  2,  2,  0,  0,  0,  0,  0,  4,  2,  2,  0,  0,  0,  0,
		 2,  6,  4,  4,  2,  2,  2,  2,  2,  6,  4,  4,  2,  2,  2,  2,  0,  4,  2,  2,  0,  0,  0,  0,  0,  4,  2,  2,  0,  0,  0,  0,
		 6, 10,  8,  8,  6,  6,  6,  6,  6, 10,  8,  8,  6,  6,  6,  6,  0,  4,  2,  2,  0,  0,  0,  0,  0,  4,  2,  2,  0,  0,  0,  0,
		 2,  6,  4,  4,  2,  2,  2,  2,  2,  6,  4,  4,  2,  2,  2,  2,  0,  4,  2,  2,  0,  0,  0,  0,  0,  4,  2,  2,  0,  0,  0,  0,
		 4,  8,  6,  6,  4,  4,  4,  4,  4,  8,  6,  6,  4,  4,  4,  4,  0,  4,  2,  2,  0,  0,  0,  0,  0,  4,  2,  2,  0,  0,  0,  0,
		 2,  6,  4,  4,  2,  2,  2,  2,  2,  6,  4,  4,  2,  2,  2,  2,  0,  4,  2,  2,  0,  0,  0,  0,  0,  4,  2,  2,  0,  0,  0,  0,
	],
	[
		 0,  6,  4,  4,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  4,  4,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,
		 0,  6,  4,  4,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  4,  4,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,
		 2,  8,  6,  6,  4,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  8,  6,  6,  4,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,
		 0,  6,  4,  4,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  4,  4,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,
		 4, 10,  8,  8,  6,  6,  6,  6,  4,  4,  4,  4,  4,  4,  4,  4,  4, 10,  8,  8,  6,  6,  6,  6,  4,  4,  4,  4,  4,  4,  4,  4,
		 0,  6,  4,  4,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  4,  4,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,
		 2,  8,  6,  6,  4,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  8,  6,  6,  4,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,
		 0,  6,  4,  4,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  6,  4,  4,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,
	],
	[
		 0,  8,  6,  6,  4,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		 0,  8,  6,  6,  4,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		 0,  8,  6,  6,  4,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		 0,  8,  6,  6,  4,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		 2, 10,  8,  8,  6,  6,  6,  6,  4,  4,  4,  4,  4,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
		 2, 10,  8,  8,  6,  6,  6,  6,  4,  4,  4,  4,  4,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
		 0,  8,  6,  6,  4,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		 0,  8,  6,  6,  4,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
	],
	[
		 0, 10,  8,  8,  6,  6,  6,  6,  4,  4,  4,  4,  4,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
		 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		 0, 10,  8,  8,  6,  6,  6,  6,  4,  4,  4,  4,  4,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
		 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		 0, 10,  8,  8,  6,  6,  6,  6,  4,  4,  4,  4,  4,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
		 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		 0, 10,  8,  8,  6,  6,  6,  6,  4,  4,  4,  4,  4,  4,  4,  4,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
		 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
	],
	[
		 0, 12, 10, 10,  8,  8,  8,  8,  6,  6,  6,  6,  6,  6,  6,  6,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
		 2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
		 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		 0, 12, 10, 10,  8,  8,  8,  8,  6,  6,  6,  6,  6,  6,  6,  6,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,  4,
		 2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,  2,
		 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
		 0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
	],
];

/* bit masks for diagonal/vertical/all lines */
#[rustfmt::skip]
const MASK_X: [[u64; 4];64] = [
	[ 0x0000000000000001, 0x8040201008040201, 0x0101010101010101, 0x81412111090503ff ],
	[ 0x0000000000000102, 0x0080402010080402, 0x0202020202020202, 0x02824222120a07ff ],
	[ 0x0000000000010204, 0x0000804020100804, 0x0404040404040404, 0x0404844424150eff ],
	[ 0x0000000001020408, 0x0000008040201008, 0x0808080808080808, 0x08080888492a1cff ],
	[ 0x0000000102040810, 0x0000000080402010, 0x1010101010101010, 0x10101011925438ff ],
	[ 0x0000010204081020, 0x0000000000804020, 0x2020202020202020, 0x2020212224a870ff ],
	[ 0x0001020408102040, 0x0000000000008040, 0x4040404040404040, 0x404142444850e0ff ],
	[ 0x0102040810204080, 0x0000000000000080, 0x8080808080808080, 0x8182848890a0c0ff ],
	[ 0x0000000000000102, 0x4020100804020104, 0x0101010101010101, 0x412111090503ff03 ],
	[ 0x0000000000010204, 0x8040201008040201, 0x0202020202020202, 0x824222120a07ff07 ],
	[ 0x0000000001020408, 0x0080402010080402, 0x0404040404040404, 0x04844424150eff0e ],
	[ 0x0000000102040810, 0x0000804020100804, 0x0808080808080808, 0x080888492a1cff1c ],
	[ 0x0000010204081020, 0x0000008040201008, 0x1010101010101010, 0x101011925438ff38 ],
	[ 0x0001020408102040, 0x0000000080402010, 0x2020202020202020, 0x20212224a870ff70 ],
	[ 0x0102040810204080, 0x0000000000804020, 0x4040404040404040, 0x4142444850e0ffe0 ],
	[ 0x0204081020408001, 0x0000000000008040, 0x8080808080808080, 0x82848890a0c0ffc0 ],
	[ 0x0000000000010204, 0x201008040201000a, 0x0101010101010101, 0x2111090503ff0305 ],
	[ 0x0000000001020408, 0x4020100804020101, 0x0202020202020202, 0x4222120a07ff070a ],
	[ 0x0000000102040810, 0x8040201008040201, 0x0404040404040404, 0x844424150eff0e15 ],
	[ 0x0000010204081020, 0x0080402010080402, 0x0808080808080808, 0x0888492a1cff1c2a ],
	[ 0x0001020408102040, 0x0000804020100804, 0x1010101010101010, 0x1011925438ff3854 ],
	[ 0x0102040810204080, 0x0000008040201008, 0x2020202020202020, 0x212224a870ff70a8 ],
	[ 0x0204081020408001, 0x0000000080402010, 0x4040404040404040, 0x42444850e0ffe050 ],
	[ 0x0408102040800003, 0x0000000000804020, 0x8080808080808080, 0x848890a0c0ffc0a0 ],
	[ 0x0000000001020408, 0x1008040201000016, 0x0101010101010101, 0x11090503ff030509 ],
	[ 0x0000000102040810, 0x2010080402010005, 0x0202020202020202, 0x22120a07ff070a12 ],
	[ 0x0000010204081020, 0x4020100804020101, 0x0404040404040404, 0x4424150eff0e1524 ],
	[ 0x0001020408102040, 0x8040201008040201, 0x0808080808080808, 0x88492a1cff1c2a49 ],
	[ 0x0102040810204080, 0x0080402010080402, 0x1010101010101010, 0x11925438ff385492 ],
	[ 0x0204081020408001, 0x0000804020100804, 0x2020202020202020, 0x2224a870ff70a824 ],
	[ 0x0408102040800003, 0x0000008040201008, 0x4040404040404040, 0x444850e0ffe05048 ],
	[ 0x0810204080000007, 0x0000000080402010, 0x8080808080808080, 0x8890a0c0ffc0a090 ],
	[ 0x0000000102040810, 0x080402010000002e, 0x0101010101010101, 0x090503ff03050911 ],
	[ 0x0000010204081020, 0x100804020100000d, 0x0202020202020202, 0x120a07ff070a1222 ],
	[ 0x0001020408102040, 0x2010080402010003, 0x0404040404040404, 0x24150eff0e152444 ],
	[ 0x0102040810204080, 0x4020100804020101, 0x0808080808080808, 0x492a1cff1c2a4988 ],
	[ 0x0204081020408002, 0x8040201008040201, 0x1010101010101010, 0x925438ff38549211 ],
	[ 0x0408102040800005, 0x0080402010080402, 0x2020202020202020, 0x24a870ff70a82422 ],
	[ 0x081020408000000b, 0x0000804020100804, 0x4040404040404040, 0x4850e0ffe0504844 ],
	[ 0x1020408000000017, 0x0000008040201008, 0x8080808080808080, 0x90a0c0ffc0a09088 ],
	[ 0x0000010204081020, 0x040201000000005e, 0x0101010101010101, 0x0503ff0305091121 ],
	[ 0x0001020408102040, 0x080402010000001d, 0x0202020202020202, 0x0a07ff070a122242 ],
	[ 0x0102040810204080, 0x100804020100000b, 0x0404040404040404, 0x150eff0e15244484 ],
	[ 0x0204081020408001, 0x2010080402010003, 0x0808080808080808, 0x2a1cff1c2a498808 ],
	[ 0x0408102040800003, 0x4020100804020101, 0x1010101010101010, 0x5438ff3854921110 ],
	[ 0x081020408000000e, 0x8040201008040201, 0x2020202020202020, 0xa870ff70a8242221 ],
	[ 0x102040800000001d, 0x0080402010080402, 0x4040404040404040, 0x50e0ffe050484442 ],
	[ 0x204080000000003b, 0x0000804020100804, 0x8080808080808080, 0xa0c0ffc0a0908884 ],
	[ 0x0001020408102040, 0x02010000000000be, 0x0101010101010101, 0x03ff030509112141 ],
	[ 0x0102040810204080, 0x040201000000003d, 0x0202020202020202, 0x07ff070a12224282 ],
	[ 0x0204081020408001, 0x080402010000001b, 0x0404040404040404, 0x0eff0e1524448404 ],
	[ 0x0408102040800003, 0x1008040201000007, 0x0808080808080808, 0x1cff1c2a49880808 ],
	[ 0x0810204080000007, 0x2010080402010003, 0x1010101010101010, 0x38ff385492111010 ],
	[ 0x102040800000000f, 0x4020100804020101, 0x2020202020202020, 0x70ff70a824222120 ],
	[ 0x204080000000003e, 0x8040201008040201, 0x4040404040404040, 0xe0ffe05048444241 ],
	[ 0x408000000000007d, 0x0080402010080402, 0x8080808080808080, 0xc0ffc0a090888482 ],
	[ 0x0102040810204080, 0x010000000000027e, 0x0101010101010101, 0xff03050911214181 ],
	[ 0x0204081020408001, 0x020100000000007d, 0x0202020202020202, 0xff070a1222428202 ],
	[ 0x0408102040800003, 0x040201000000003b, 0x0404040404040404, 0xff0e152444840404 ],
	[ 0x0810204080000007, 0x0804020100000017, 0x0808080808080808, 0xff1c2a4988080808 ],
	[ 0x102040800000000f, 0x1008040201000007, 0x1010101010101010, 0xff38549211101010 ],
	[ 0x204080000000001f, 0x2010080402010003, 0x2020202020202020, 0xff70a82422212020 ],
	[ 0x408000000000003f, 0x4020100804020101, 0x4040404040404040, 0xffe0504844424140 ],
	[ 0x800000000000017e, 0x8040201008040201, 0x8080808080808080, 0xffc0a09088848281 ]
];

#[inline]
fn last_flip(sq: usize, player: u64) -> i32 {
    let mut n_flipped: u8;
    let x = sq & 7;
    let y = sq >> 3;

    let masked_p = player & MASK_X[sq][3];
    n_flipped = COUNT_FLIP[x][((masked_p >> (sq & 0x38)) & 0xFF) as usize];
    n_flipped += COUNT_FLIP[y][pext_u64(masked_p, MASK_X[sq][0]) as usize];
    n_flipped += COUNT_FLIP[y][pext_u64(masked_p, MASK_X[sq][1]) as usize];
    n_flipped += COUNT_FLIP[y][pext_u64(masked_p, MASK_X[sq][2]) as usize];

    n_flipped as i32
}

#[inline]
pub fn count_last_flip(b: u64, sq: Square) -> i32 {
    last_flip(sq as usize, b)
}
